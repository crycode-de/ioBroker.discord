{
  "type": "tabs",
  "i18n": true,
  "items": {
    "mainTab": {
      "type": "panel",
      "label": "Main settings",
      "items": {
        "token":{
          "type": "text",
          "newLine": true,
          "sm": 12,
          "lg": 8,
          "label": "Token",
          "help": "Your bot token from the discord developers portal",
          "placeholder": "xxxxxxxxxxxxxxxxxxxxxxxx.yyyyyy.zzzzzzzzzzzzzzzzzzzzzzzzzzz",
          "validator": "data.token.match(/^\\w{24}\\.\\w{6}\\.\\w{27}$/)",
          "validatorNoSaveOnError": true
        },
        "_devPortalLink": {
          "type": "staticLink",
          "sm": 12,
          "lg": 4,
          "href": "https://discord.com/developers/applications",
          "text": "üîó Discord Developers Portal",
          "style": {
            "fontSize": 16,
            "cursor": "pointer"
          }
        },

        "botName": {
          "type": "text",
          "newLine": true,
          "sm": 12,
          "lg": 6,
          "label": "Name of the bot",
          "help": "Set a name for the bot on adapter start. Leave empty to keep current bot name."
        },

        "dynamicServerUpdates": {
          "type": "checkbox",
          "newLine": true,
          "sm": 12,
          "md": 6,
          "lg": 4,
          "label": "Dynamic server updates",
          "help": "Watch for server, channel and user updates and update objects according. If disabled, the objects will only be updated on adapter start."
        },
        "observeUserPresence": {
          "type": "checkbox",
          "sm": 12,
          "md": 6,
          "lg": 4,
          "label": "Observe user presence",
          "help": "Observe presence status for all known users."
        }
      }
    },
    "messagesTab": {
      "type": "panel",
      "label": "Messages",
      "items": {
        "processAllMessagesInServerChannel": {
          "type": "checkbox",
          "newLine": true,
          "sm": 12,
          "md": 6,
          "lg": 4,
          "label": "Process all messages in server channels",
          "help": "If checked, all messages in server channels will be processed by the adapter. Otherwise only mentions and commands will be processed."
        },

        "reactOnMentions": {
          "type": "checkbox",
          "newLine": true,
          "sm": 12,
          "md": 6,
          "lg": 4,
          "label": "React on mentions",
          "help": "Let the adapter react on bot mentions. If authorization is enabled, this only works for authorized users."
        },
        "reactOnMentionsEmoji": {
          "type": "text",
          "sm": 12,
          "md": 6,
          "lg": 4,
          "label": "React with emoji",
          "help": "Emoji to react with on mentions. Default is üëç.",
          "hidden": "!data.reactOnMentions",
          "hideOnlyControl": true
        },

        "text2commandInstance": {
          "type": "selectSendTo",
          "newLine": true,
          "sm": 12,
          "lg": 6,
          "label": "text2command instance",
          "help": "Send messages from states with enabled text2command to the given text2command instance.",
          "noMultiEdit": true,
          "command": "getText2commandInstances",
          "defaultFunc": "data.text2commandInstance || ''"
        },
        "_text2commandInstanceHelp": {
          "type": "staticText",
          "sm": 12,
          "lg": 6,
          "hidden": "_alive",
          "hideOnlyControl": true,
          "text": "Adapter needs to be running to be able to select a text2command instance!",
          "style": {
            "color": "red"
          }
        },
        "text2commandRespondWith": {
          "type": "select",
          "label": "Response of text2command",
          "help": "How the response of text2command is send",
          "sm": 12,
          "lg": 6,
          "hidden": "!data.text2commandInstance",
          "options": [
            { "label": "Reply", "value": "reply" },
            { "label": "Message", "value": "message" },
            { "label": "None", "value": "none" }
          ]
        }
      }
    },

    "authTab": {
      "type": "panel",
      "label": "Authorization",
      "items": {
        "enableAuthorization": {
          "type": "checkbox",
          "newLine": true,
          "sm": 12,
          "md": 6,
          "lg": 4,
          "label": "Enable authorization",
          "help": "If checked, only authorized users will be allowed to interact with the bot.",
          "confirm": {
            "condition": "!data.enableAuthorization",
            "type": "warning",
            "title": "Warning",
            "text": "When authorization is disabled, any user is able to interact with the bot! You should only disable authorization if you trust all users on any server where the bot is on. Do you really want to disable authorization?",
            "ok": "Ignore warning",
            "cancel": "Keep authorization enabled"
          }
        },

        "_authorizedUsersInstanceHelp": {
          "type": "staticText",
          "newLine": true,
          "sm": 12,
          "hidden": "_alive || !data.enableAuthorization",
          "text": "Adapter instance needs to be running to be able to select allowed users from a drop down list! Otherwise you need to enter the user IDs manually.",
          "style": {
            "color": "red"
          }
        },
        "authorizedUsers": {
          "type": "table",
          "newLine": true,
          "sm": 12,
          "hidden": "!data.enableAuthorization",
          "label": "Allowed users",
          "help": "List of users allowed to interact with the bot.",
          "items": [
            {
              "type": "selectSendTo",
              "title": "User",
              "width": "50%",
              "attr": "userId",
              "filter": false,
              "sort": false,
              "command": "getUsers",
              "defaultFunc": "data.userId || ''",
              "validator": "data.userId && data.userId.match(/^\\d+$/)",
              "validatorNoSaveOnError": true
            },
            {
              "type": "checkbox",
              "title": "Get states",
              "width": "16%",
              "attr": "getStates",
              "filter": false,
              "sort": false
            },
            {
              "type": "checkbox",
              "title": "Set states",
              "width": "16%",
              "attr": "setStates",
              "filter": false,
              "sort": false
            },
            {
              "type": "checkbox",
              "title": "Use text2command",
              "width": "16%",
              "attr": "useText2command",
              "filter": false,
              "sort": false
            }
          ]
        },

        "processMessagesFromUnauthorizedUsers": {
          "type": "checkbox",
          "newLine": true,
          "sm": 12,
          "md": 6,
          "lg": 4,
          "hidden": "!data.enableAuthorization",
          "label": "Process messages from unauthorized users",
          "help": "If checked, messages from all users will be processed and stored into the .message states, but they will not trigger any adapter actions."
        }
      }
    },

    "commandsTab": {
      "type": "panel",
      "label": "Commands",
      "items": {
        "enableCommands": {
          "type": "checkbox",
          "newLine": true,
          "sm": 12,
          "md": 6,
          "lg": 4,
          "label": "Enable commands",
          "help": "If checked, the bot will register discord slash commands to get and set ioBroker states."
        },

        "cmdGetStateName": {
          "type": "text",
          "newLine": true,
          "sm": 12,
          "md": 6,
          "lg": 4,
          "hidden": "!data.enableCommands",
          "label": "Custom get state command name",
          "help": "Custom name for the get state command. Defaults to 'iob-get'.",
          "placeholder": "iob-get"
        },
        "cmdSetStateName": {
          "type": "text",
          "sm": 12,
          "md": 6,
          "lg": 4,
          "hidden": "!data.enableCommands",
          "label": "Custom set state command name",
          "help": "Custom name for the set state command. Defaults to 'iob-get'.",
          "placeholder": "iob-set"
        }
      }
    }
  }
}