{
  "version": 3,
  "sources": ["../../src/lib/i18n.ts"],
  "sourcesContent": ["import de from '../../admin/i18n/de.json';\nimport en from '../../admin/i18n/en.json';\nimport es from '../../admin/i18n/es.json';\nimport fr from '../../admin/i18n/fr.json';\nimport it from '../../admin/i18n/it.json';\nimport nl from '../../admin/i18n/nl.json';\nimport pl from '../../admin/i18n/pl.json';\nimport pt from '../../admin/i18n/pt.json';\nimport ru from '../../admin/i18n/ru.json';\nimport zhCn from '../../admin/i18n/zh-cn.json';\n\ntype I18nObj = typeof en;\ntype I18nKey = keyof I18nObj;\n\n/**\n * Get a translation object or a single string for a given translation key.\n * Uses the i18n files in `admin/i18n`.\n * @param key The key from `en.json`.\n */\nexport function getI18nStringOrTranslated (key: I18nKey): ioBroker.StringOrTranslated {\n  if (en[key]) {\n    return {\n      de: (de as I18nObj)[key] || key,\n      en: en[key] || key,\n      es: (es as I18nObj)[key] || key,\n      fr: (fr as I18nObj)[key] || key,\n      it: (it as I18nObj)[key] || key,\n      nl: (nl as I18nObj)[key] || key,\n      pl: (pl as I18nObj)[key] || key,\n      pt: (pt as I18nObj)[key] || key,\n      ru: (ru as I18nObj)[key] || key,\n      'zh-cn': (zhCn as I18nObj)[key] || key,\n    };\n  } else {\n    return key;\n  }\n}"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAe;AACf,gBAAe;AACf,gBAAe;AACf,gBAAe;AACf,gBAAe;AACf,gBAAe;AACf,gBAAe;AACf,gBAAe;AACf,gBAAe;AACf,mBAAiB;AAUV,mCAAoC,KAA2C;AACpF,MAAI,kBAAG,MAAM;AACX,WAAO;AAAA,MACL,IAAK,kBAAe,QAAQ;AAAA,MAC5B,IAAI,kBAAG,QAAQ;AAAA,MACf,IAAK,kBAAe,QAAQ;AAAA,MAC5B,IAAK,kBAAe,QAAQ;AAAA,MAC5B,IAAK,kBAAe,QAAQ;AAAA,MAC5B,IAAK,kBAAe,QAAQ;AAAA,MAC5B,IAAK,kBAAe,QAAQ;AAAA,MAC5B,IAAK,kBAAe,QAAQ;AAAA,MAC5B,IAAK,kBAAe,QAAQ;AAAA,MAC5B,SAAU,qBAAiB,QAAQ;AAAA,IACrC;AAAA,EACF,OAAO;AACL,WAAO;AAAA,EACT;AACF;",
  "names": []
}
